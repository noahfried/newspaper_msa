"0","#Read in first dataset, withdrawn"
"0","folder <- ""data"""
"0","data1 <- read_csv(file.path(folder, ""hwys2msa.csv"")) %>%"
"0","  filter(withdrawal == 1) %>%"
"0","  select(msa = smsacode, length = length_msa_km, withdrawal)"
"2","[1mRows: [22m[34m69[39m [1mColumns: [22m[34m40[39m"
"2","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m  (21): name, layer, path, NHGISNAM, NHGISST, NHGISCTY, ICPSRNAM, STATENAM, STATE, COUNTY, GISJOIN, GISJOIN2, statefips, countyfips, fips, smsacode, stat...
[32mdbl[39m  (17): id, withdrawal, length, length_km, DECADE, ICPSRST, ICPSRCTY, ICPSRSTI, ICPSRCTYI, ICPSRFIP, PID, X_CENTROID, Y_CENTROID, SHAPE_AREA, SHAPE_LEN, ...
[33mlgl[39m   (1): entityfips
[34mdate[39m  (1): date"
"2","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message."
"0","#Read in second dataset, completed"
"0","data2 <- read_csv(file.path(folder, ""pr5112msa.csv"")) %>%"
"0","  filter(!is.na(smsacode),OPEN90!= 0) %>%"
"0","  select(msa = smsacode, length = length_in_km, starts_with(""OPEN"")) %>%"
"0","  mutate(withdrawal = 0)"
"2","[1mRows: [22m[34m10313[39m [1mColumns: [22m[34m67[39m"
"2","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m (27): ROUTE_NUM, STATE_FIPS, CNTY_FIPS, FIPS, GEO_ID, STATE, PUMA1, UNIQUE, INTST, NHGISNAM, NHGISST, NHGISCTY, ICPSRNAM, STATENAM, STATE_2, COUNTY, GIS...
[32mdbl[39m (39): ROUTE_2, ROUTE_3, LENGTH, STARTPNT_X, STARTPNT_Y, ENDPNT_X, ENDPNT_Y, STATEFIPS, CNTYFIPS, CC, MSA, OPEN50, OPEN60, OPEN70, OPEN80, OPEN90, A, B, ...
[33mlgl[39m  (1): entityfips"
"2","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message."
"0","#append"
"0","combined <- bind_rows(data1, data2)"
"0",""
"0","#sort"
"0","sorted <- arrange(combined, msa, withdrawal)"
"0",""
"0","sorted <- sorted %>%"
"0","  group_by(msa) %>%"
"0","  mutate(has_withdraw = max(withdrawal)) %>%"
"0","  ungroup()"
"0",""
"0","collapsed_data <- sorted %>%"
"0","  group_by(msa, withdrawal) %>%"
"0","  summarize(length = sum(length, na.rm = TRUE), .groups = 'drop')"
"0",""
"0","# Calculate total length for each msa"
"0","collapsed_data <- collapsed_data %>%"
"0","  group_by(msa) %>%"
"0","  mutate(total_length = sum(length, na.rm = TRUE)) %>%"
"0","  ungroup()"
"0",""
"0","# Generate frac_length and handle precision issues"
"0","collapsed_data <- collapsed_data %>%"
"0","  mutate(frac_length = length / total_length,"
"0","         frac_length = ifelse(frac_length > 0.9999, 1, frac_length))"
"0",""
"0","# Sort by msa and descending withdrawal"
"0","sorted_data <- collapsed_data %>%"
"0","  arrange(msa, desc(withdrawal))"
"0",""
"0","# Tagging the first occurrence of each msa"
"0","tagged_data <- sorted_data %>%"
"0","  group_by(msa) %>%"
"0","  filter(row_number() == 1) %>%"
"0","  ungroup()"
"0",""
"0","# Replace frac_length with 0 where withdrawal is 0"
"0","tagged_data <- tagged_data %>%"
"0","  mutate(frac_length = ifelse(withdrawal == 0, 0, frac_length))"
"0",""
"0","# Drop columns withdrawal, tag, and length"
"0","msahwy <- tagged_data %>%"
"0","  select(-withdrawal, -length) %>%"
"0","  rename(frac_length_withdrawn = frac_length)"
"0",""
"0","# Save the final dataframe to a CSV file"
"0","write_csv(msahwy, file.path(folder, ""msahwy.csv""))"
"0",""
"0","# Display the final dataframe"
"0","print(msahwy)"
